plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group = projectGroup
version = projectVersion
archivesBaseName = projectName

sourceCompatibility = targetCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.4"
    }
}

repositories {
    mavenCentral()
    maven {
        url = 'https://s01.oss.sonatype.org/repositories/releases/'
    }

    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }

    mavenLocal()
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

dependencies {
    /* Internal. */
    shade('org.java-websocket:Java-WebSocket:1.5.2')
    shade('com.squareup.okhttp3:okhttp:4.9.3')
    shade('xyz.deftu.deftils:Deftils:1.2.0')
    shade('com.google.code.gson:gson:2.8.9')

    /* Utility. */
    shade('xyz.deftu.eventbus:SimpleEventBus:1.0')
    shade('com.github.ben-manes.caffeine:caffeine:2.9.3') /* We stay on v2 because v3+ isn't on Java 8 */

    /* Logging. */
    shade('org.apache.logging.log4j:log4j-api:2.14.1')
    shade('org.apache.logging.log4j:log4j-core:2.14.1')
    shade('org.apache.logging.log4j:log4j-slf4j18-impl:2.14.1')

    /* Compatibility. */
    shade('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    shade('org.jetbrains.kotlin:kotlin-reflect')
    shade('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1-native-mt')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from 'LICENSE'
}

publishing {
    publications {
        local(MavenPublication) {
            groupId = projectGroup
            artifactId = projectName
            version = projectVersion

            from components.java
        }

        publish(MavenPublication) {
            from components.java

            groupId = projectGroup
            artifactId = projectName
            version = projectVersion

            pom {
                name = projectName
                description = projectDescription
                url = projectGit

                licenses {
                    license {
                        name = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id = "deftu"
                        name = "Deftu"
                        email = "deftudev@gmail.com"
                    }
                }

                scm {
                    url = projectGit
                }
            }
        }
    }

    repositories {
        maven {
            name = "MavenCentral"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty("publishing.mavencentral.username")
                password = findProperty("publishing.mavencentral.password")
            }
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    configurations = [project.configurations.shade]
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    archiveClassifier.set('')
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign publishing.publications.publish
    sign configurations.archives
}

apply from: 'gradle/example.gradle'

jar.finalizedBy(shadowJar)